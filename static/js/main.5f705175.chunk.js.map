{"version":3,"sources":["Clock.js","components/CreateTask.js","components/TaskItem.js","components/TaskList.js","components/Main-to-do.js","Message.js","Welcome.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","props","state","date","Date","this","timerId","setInterval","setState","clearInterval","toLocaleString","React","Component","CreateTask","handleSubmit","event","preventDefault","createTask","task","handleChange","target","value","onSubmit","type","placeholder","onChange","autoFocus","className","TaskItem","toggleTask","id","deleteTask","setEditingState","isEditing","editTask","taskItem","onClick","readOnly","checked","isCompleted","TaskList","tasks","map","index","localStorage","getItem","JSON","parse","Main","trim","push","setItem","stringify","alert","taskId","splice","Message","message","Welcome","name","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f705175.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { date: new Date() };\r\n  }\r\n  componentDidMount() {\r\n    this.timerId = setInterval(() => {\r\n      this.setState({ date: new Date() });\r\n    }, 1000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerId);\r\n  }\r\n  render() {\r\n    return <h1>{this.state.date.toLocaleString()}</h1>;\r\n  }\r\n}\r\n/*function Clock(props) {\r\n  return <h1>{props.date.toLocaleString()}</h1>;\r\n}*/\r\nexport default Clock;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class CreateTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task: '',\r\n    };\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.createTask(this.state.task);\r\n    this.setState({ task: '' });\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      task: event.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter the task\"\r\n          value={this.state.task}\r\n          onChange={this.handleChange}\r\n          autoFocus\r\n        />\r\n        <button className=\"add\" type=\"submit\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class TaskItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task: this.props.taskItem.task,\r\n      isEditing: false,\r\n    };\r\n  }\r\n  toggleTask = () => {\r\n    this.props.toggleTask(this.props.id);\r\n  };\r\n  deleteTask = () => {\r\n    this.props.deleteTask(this.props.id);\r\n  };\r\n  setEditingState = (isEditing) => {\r\n    this.setState({ isEditing: isEditing });\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      task: event.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.editTask(this.props.id, this.state.task);\r\n    this.setState({ isEditing: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <tr>\r\n        {this.state.isEditing ? (\r\n          <>\r\n            <td>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                  value={this.state.task}\r\n                  onChange={this.handleChange}\r\n                  autoFocus\r\n                />\r\n              </form>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"save\"\r\n                onClick={this.handleSubmit}\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </button>\r\n              <button\r\n                className=\"back\"\r\n                onClick={() => this.setEditingState(false)}\r\n                type=\"button\"\r\n              >\r\n                Back\r\n              </button>\r\n            </td>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <td className=\"task\" onClick={this.toggleTask}>\r\n              <input\r\n                type=\"checkbox\"\r\n                readOnly\r\n                checked={this.props.taskItem.isCompleted}\r\n              />\r\n              <span\r\n                className={\r\n                  this.props.taskItem.isCompleted\r\n                    ? 'completed'\r\n                    : 'not-completed'\r\n                }\r\n              >\r\n                {this.props.taskItem.task}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"edit\"\r\n                onClick={() => this.setEditingState(true)}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button className=\"delete\" onClick={this.deleteTask}>\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </>\r\n        )}\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nexport default class TaskList extends Component {\r\n  render() {\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Task</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.tasks.map((task, index) => (\r\n            <TaskItem\r\n              key={index}\r\n              taskItem={task}\r\n              id={index}\r\n              deleteTask={this.props.deleteTask}\r\n              editTask={this.props.editTask}\r\n              toggleTask={this.props.toggleTask}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CreateTask from './CreateTask';\r\nimport TaskList from './TaskList';\r\n\r\nconst tasks = localStorage.getItem('tasks')\r\n  ? JSON.parse(localStorage.getItem('tasks'))\r\n  : [];\r\nexport default class Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: tasks,\r\n    };\r\n  }\r\n  createTask = (task) => {\r\n    if (task.trim() === '') {\r\n      alert(\"Task can't be empty\");\r\n      return;\r\n    }\r\n    tasks.push({ task, isCompleted: false });\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  };\r\n  toggleTask = (taskId) => {\r\n    const taskItem = tasks[taskId];\r\n    taskItem.isCompleted = !taskItem.isCompleted;\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  };\r\n  deleteTask = (taskId) => {\r\n    tasks.splice(taskId, 1);\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  };\r\n  editTask = (taskId, task) => {\r\n    const taskItem = tasks[taskId];\r\n    taskItem.task = task;\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <h1>To Do</h1>\r\n        <div className=\"content\">\r\n          <CreateTask createTask={this.createTask} />\r\n          <br />\r\n          <TaskList\r\n            deleteTask={this.deleteTask}\r\n            tasks={this.state.tasks}\r\n            editTask={this.editTask}\r\n            toggleTask={this.toggleTask}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nclass Message extends React.Component {\r\n  render() {\r\n    return <h1>{this.props.message}</h1>;\r\n  }\r\n}\r\nexport default Message;\r\n","import Message from './Message';\r\n\r\nfunction Welcome(props) {\r\n  return (\r\n    <div>\r\n      {' '}\r\n      <h1>Hello {props.name}</h1>\r\n      <Message message=\"Welcome to my chekclist app\" />\r\n    </div>\r\n  );\r\n}\r\nexport default Welcome;\r\n","import './App.css';\nimport Clock from './Clock';\nimport Main from './components/Main-to-do';\nimport Message from './Message';\n\nimport Welcome from './Welcome';\n\nfunction App() {\n  return (\n    <div>\n      <Welcome />\n      <Message message=\"You can easily add,edit,mark done and delete tasks\" />\n      <Main />\n      <Clock />\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Welcome from './Welcome';\nimport Message from './Message';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}